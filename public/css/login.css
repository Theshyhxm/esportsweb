/* css variables */
:root {
  --background-image: url(https://wallpaperaccess.com/full/1519722.jpg);
  --primary-color: #8c275f;
  --secondary-color: #f74988;
  --body-color: #011140;
  --body-color-gradient: #011140ec;
  --title-color: #e4e9f2;
  --text-color: #bcbdc0;
  --valid-color: #3de02b;
  --invalid-color: #f11439;
  --transparent: #00000000;
  --font-family: "Poppins", sans-serif;
  --large-font-size: calc(3rem + 1.625vh);
  --medium-font-size: min(calc(1rem + 0.725vh), 1.25rem);
  --small-font-size: min(calc(0.675rem + 0.5vh), 1rem);
}

/* NOTE: all other custom themes' variables are at the end */
/* making sass variables out of the css variables just for ease of use */
*,
*::before,
*::after {
  box-sizing: border-box;
}

* {
  transition: font-size 0.00001s;
}

/* overriding the browser's autofill styles */
input:-webkit-autofill, input:-webkit-autofill:hover, input:-webkit-autofill:focus,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover,
textarea:-webkit-autofill:focus,
select:-webkit-autofill,
select:-webkit-autofill:hover,
select:-webkit-autofill:focus {
  -webkit-text-fill-color: var(--title-color);
  -webkit-box-shadow: 0 0 0px 1000px var(--transparent) inset;
  box-shadow: 0 0 0px 1000px var(--transparent) inset;
  transition: background-color 5000s 0s;
}
input:-webkit-autofill::first-line, input:-webkit-autofill:hover::first-line, input:-webkit-autofill:focus::first-line,
textarea:-webkit-autofill::first-line,
textarea:-webkit-autofill:hover::first-line,
textarea:-webkit-autofill:focus::first-line,
select:-webkit-autofill::first-line,
select:-webkit-autofill:hover::first-line,
select:-webkit-autofill:focus::first-line {
  font-size: var(--medium-font-size);
}
input::placeholder,
textarea::placeholder,
select::placeholder {
  color: var(--text-color);
}

/* hiding the default checkbox and styling a custom one */
input[type=checkbox] {
  display: none;
}
input[type=checkbox] + .checkmark {
  float: left;
  height: var(--medium-font-size);
  width: var(--medium-font-size);
  vertical-align: middle;
  margin-right: 0.4rem;
  align-self: center;
  border: 2px solid var(--primary-color);
  border-radius: calc(var(--medium-font-size) / 3);
  transition: 0.25s;
}
input[type=checkbox] + .checkmark::after {
  content: "";
  position: relative;
  opacity: 0;
}
input[type=checkbox]:checked + .checkmark {
  background: var(--secondary-color);
  border-color: var(--secondary-color);
}
input[type=checkbox]:checked + .checkmark::after {
  opacity: 1;
}

.checkmark-label {
  display: flex;
  align-items: center;
  width: max-content;
  text-align: left;
  -webkit-tap-highlight-color: transparent;
  user-select: none;
  cursor: pointer;
}
.checkmark-label:hover .checkmark {
  border-color: var(--secondary-color);
}
.checkmark-label .checkmark::after {
  display: block;
  left: 50%;
  top: 50%;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: translate(-50%, calc(-50% - 2px)) rotate(45deg);
  transition: all 0.25s;
}

/* hiding the default radio and styling a custom one */
input[type=radio] {
  display: none;
}
input[type=radio] + .radio {
  float: left;
  height: var(--medium-font-size);
  width: var(--medium-font-size);
  vertical-align: middle;
  margin-right: 0.4rem;
  align-self: center;
  border: 2px solid var(--primary-color);
  border-radius: 50%;
  transition: 0.125s;
}
input[type=radio] + .radio::after {
  content: "";
  position: relative;
  opacity: 0;
}
input[type=radio]:checked + .radio {
  background: var(--secondary-color);
  border-color: var(--secondary-color);
}
input[type=radio]:checked + .radio::after {
  opacity: 1;
}

.radio-label {
  display: flex;
  align-items: center;
  width: max-content;
  text-align: left;
  -webkit-tap-highlight-color: transparent;
  user-select: none;
  cursor: pointer;
}
.radio-label:hover .radio {
  background-color: rgba(var(--secondary-color), 0.25);
  border-color: var(--secondary-color);
}
.radio-label .radio::after {
  display: block;
  left: 50%;
  top: 50%;
  width: 5px;
  height: 10px;
  width: 50%;
  height: 50%;
  transform: translate(-50%, -50%);
  background: var(--title-color);
  border-radius: 50%;
  transition: all 0.1s;
}

/* valid and invalid classes to override color styling on validation */
.valid {
  color: var(--valid-color) !important;
  border-color: var(--valid-color) !important;
}

.invalid {
  color: var(--invalid-color) !important;
  border-color: var(--invalid-color) !important;
}

body {
  width: 100% !important;
  height: 100% !important;
  overflow: hidden;
  font-family: var(--font-family);
  font-size: var(--medium-font-size);
  margin: 0;
  padding: 0;
  color: var(--text-color);
  background: var(--background-image) no-repeat center center fixed;
  background-size: cover;
}

.block-mobile-landscape {
  display: none;
  position: absolute;
  z-index: 100;
  width: 100%;
  height: 100%;
  background: var(--body-color);
  font-size: 2.5rem;
  text-transform: capitalize;
  background: linear-gradient(to top, var(--body-color-gradient), var(--primary-color) 150%), var(--background-image) no-repeat center center fixed;
  background-size: cover;
}

.slider {
  width: 90%;
  max-height: 100%;
  height: 100%;
  overflow: hidden;
  margin-left: 0;
  position: absolute;
  transition: 0.9s;
}
.slider.slide {
  margin-left: 10%;
}

.container {
  width: 200%;
  height: 100%;
  margin-left: 100%;
  position: relative;
  left: 0;
  left: -100%;
  background: linear-gradient(to top, var(--body-color-gradient), var(--primary-color) 250%);
  transition: 0.9s;
}
.container.slide {
  margin-left: 0;
}

.left,
.right {
  width: 50.1%;
  /* width is 50.1% (not 50%) to avoid weird visual glitching that usually happens on exact measures */
  height: 100%;
  position: absolute;
}

.left {
  left: 0;
}

.right {
  right: 0;
}

.content {
  width: min(100%, 350px);
  padding: 1rem;
  margin: 0 auto;
  top: 50%;
  position: absolute;
  left: 50%;
  transform: translate(-50%, -50%);
  transition: all ease 0.9s;
}
.content.login {
  top: 0;
  transform: translate(-50%, -120%);
}
.content.login.active {
  top: 50%;
  transform: translate(-50%, -50%);
}
.content.recover {
  top: 120%;
  transform: translate(-50%, 0);
}
.content.recover.active {
  top: 50%;
  transform: translate(-50%, -50%);
}

.title {
  font-size: var(--large-font-size);
  margin-bottom: 2rem;
  text-align: center;
  color: var(--title-color);
}

.info {
  position: relative;
}

/* when the label rests on the input border, either the border will go through it or we can give it a solid background which won't work because the container background is a tranclusent gradient. So we will use a trick where the label has an after class to imitate the the border with a label wrapper that contains it from overflowing */
.label-wrapper {
  width: calc(100% - 3.25rem);
  overflow: hidden;
  position: absolute;
  transform: translateY(27px);
  margin-left: 1.5rem;
  font-size: var(--medium-font-size);
  color: var(--primary-color);
  transition: 0.4s;
  background: inherit;
  pointer-events: none;
  user-select: none;
  /* I will be using a hover class which I will add with javascript to improve hover effects */
  /* same this with focus however focus will remain if element has user input */
}
.label-wrapper.hover {
  color: var(--secondary-color);
}
.label-wrapper.active {
  font-size: 1rem;
  transform: translateY(-1.5px);
  color: var(--secondary-color);
}

.label.active::after {
  content: "";
  background: var(--secondary-color);
  height: 3px;
  margin-left: 3px;
  position: absolute;
  width: 500px;
  top: 50%;
}
.label.active.valid::after {
  background: var(--valid-color);
}
.label.active.invalid::after {
  background: var(--invalid-color);
}

/* the method above works great except for the corner where it looks disconnected because of the border radius, this is where the span class will mask that */
.border-corner-cover {
  position: absolute;
  top: 8px;
  right: 0;
  width: 30px;
  height: 60px;
  border: 3px solid var(--primary-color);
  border-left: none;
  border-top-right-radius: 50px;
  border-bottom-right-radius: 50px;
  transition: 0.4s;
}
.border-corner-cover.hover, .border-corner-cover.active {
  border-top-color: var(--secondary-color);
  border-right-color: var(--secondary-color);
  border-bottom-color: var(--secondary-color);
}

.input {
  width: 100%;
  border: 3px solid var(--primary-color);
  background-color: transparent;
  border-radius: 50px;
  transition: 0.4s;
  height: 60px;
  color: var(--title-color);
  padding: 0 3.5rem 0 1.5rem;
  margin: 0.5rem 0;
  font-size: var(--medium-font-size);
  position: relative;
}
.input::placeholder {
  color: var(--invalid-color);
}
.input:focus {
  outline: none;
}
.input.hover {
  border-color: var(--secondary-color);
}
.input.active {
  border-top: none;
  border-color: var(--secondary-color);
}

.password {
  padding-right: 5rem;
  /* password inputs have more padding for the eye-icons */
}

.button {
  width: 100%;
  background-color: var(--primary-color);
  font-size: var(--medium-font-size);
  border: 0;
  border-radius: 5px;
  word-spacing: 4px;
  letter-spacing: 1px;
  padding: 1rem;
  text-transform: capitalize;
  font-weight: 600;
  color: var(--title-color);
  line-height: 16px;
  margin: 0.5rem 0;
  transition: all 0.25s;
  cursor: pointer;
}
.button:hover {
  background-color: var(--secondary-color);
}

.input-icon {
  position: absolute;
  right: 1rem;
  transform: translateY(1.3rem);
  font-size: 2rem;
  opacity: 0;
  transition: 0.4s;
}

.validation-icon {
  transition: 0.4s;
}
.validation-icon.active {
  opacity: 1;
}

.password-eye {
  opacity: 1;
  position: absolute;
  z-index: 2;
  color: var(--primary-color);
}
.password-eye.hover {
  color: var(--secondary-color);
}
.password-eye.active {
  color: var(--secondary-color);
}
.password-eye.visible .password-eye-line {
  opacity: 0;
}

.password-eye-line {
  position: absolute;
  transform: translateX(-2rem);
  bottom: 0.812px;
}

/* password validation icons are pushed more to the right to give space for the eye-icons */
.password-icon {
  right: 3rem;
}

.presubmition-options {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  height: 30px;
  font-size: var(--small-font-size);
  padding: 0 0.5rem;
  margin: 0.5rem 0;
}

.forgot-pass {
  float: right;
  text-decoration: underline;
  color: var(--secondary-color);
  cursor: pointer;
}

.slide-button-container {
  margin-top: 0.5rem;
  color: var(--title-color);
}

.slide-button {
  color: var(--secondary-color);
  cursor: pointer;
}

.recovery-details {
  padding: 0 0.5rem;
  margin: 0 0 1.5rem 0;
  color: var(--text-color);
}

.send-verification {
  margin-top: 1.5rem;
  margin-bottom: 0;
}

.or {
  width: 100%;
  font-size: 2rem;
  margin: 1.25rem 0 0.75rem 0;
  text-align: center;
  font-weight: 600;
  color: var(--text-color);
}

.new-account {
  font-size: 1.25rem;
  text-align: center;
  margin-bottom: 2rem;
}
.new-account span {
  cursor: pointer;
  transition: 0.25s;
}
.new-account span:hover {
  color: var(--primary-color);
}

.back-to-login {
  float: right;
  margin-right: 0.5rem;
  color: var(--secondary-color);
  transition: 0.25s;
}

.password-requirements-container {
  height: 0;
  /* this container's changing height is what gives the password requirements list the expand/collapse effect */
  transition: all 0.4s ease-in-out;
}
.password-requirements-container.active {
  height: clamp(85px, 11vh, 95px);
  margin: 5px 0;
}

.password-requirements {
  list-style: none;
  font-size: var(--small-font-size);
  margin: 0;
  height: 0;
  padding-left: 1.75rem;
  overflow: hidden;
  transition: all 0.4s ease-in-out;
}
.password-requirements.active {
  height: 100%;
}
.password-requirements * {
  transition: 0.4s;
}
.password-requirements * i {
  transition: 0.125s;
}

.tos {
  width: auto;
  height: 60px;
  margin: 0.5rem 0;
  padding: 0 0.5rem;
  font-size: 9.7px;
}
.tos .tos-text {
  width: calc(100% - 2rem);
}
.tos .tos-text a {
  text-decoration: underline;
  color: var(--secondary-color);
}
.tos .checkmark {
  width: 2rem !important;
  height: 2rem !important;
}
.tos .checkmark::after {
  width: 0.5rem;
  height: 1rem;
}

/* a tooltip will be shown only on devices that can have hover effects */
@media (hover: hover) {
  .password-eye:hover [data-tooltip]::before, .password-eye:hover [data-tooltip]:after {
    visibility: visible;
    opacity: 1;
    transform: translateY(2.25rem);
  }

  [data-tooltip] {
    text-transform: capitalize;
    font-style: normal;
  }
  [data-tooltip]::before, [data-tooltip]::after {
    position: absolute;
    visibility: hidden;
    opacity: 0;
    pointer-events: none;
    transition: all 0.5s;
    right: 0;
    z-index: 2;
  }
  [data-tooltip]::before {
    margin-top: 12px;
    width: 120px;
    padding: 7px;
    border-radius: 5px;
    background-color: var(--primary-color);
    color: var(--title-color);
    content: attr(data-tooltip);
    text-align: center;
    font-size: var(--small-font-size);
    line-height: 1.4;
  }
  [data-tooltip]::after {
    margin-left: -15px;
    border-bottom: 15px solid var(--primary-color);
    border-right: 15px solid transparent;
    border-left: 15px solid transparent;
    content: "";
  }
}
/* animation class for invalid sumbissions of a form that will be added with javascript */
.invalid-submission {
  animation: shake 0.825s cubic-bezier(0.36, 0.07, 0.19, 0.97);
}

@keyframes shake {
  10%, 90% {
    margin: 0 1.5px 0 -1.5px;
  }
  20%, 80% {
    margin: 0 -3px 0 3px;
  }
  30%, 50%, 70% {
    margin: 0 6px 0 -6px;
  }
  40%, 60% {
    margin: 0 -6px 0 6px;
  }
}
/* for extra small devices */
@media (max-width: 355px) {
  :root {
    --large-font-size: 2.5rem;
    --medium-font-size: 0.825rem;
    --small-font-size: 0.5rem;
  }

  .checkmark-label .checkmark::after {
    width: 3.75px;
    height: 7.5px;
    transform: translate(-50%, calc(-50% - 1px)) rotate(45deg);
  }

  .label-wrapper {
    transform: translateY(30px);
  }
  .label-wrapper.active {
    transform: translateY(1px);
    font-size: 0.75rem;
  }

  .label.active::after {
    height: 2px;
  }

  .border-corner-cover {
    border-width: 2px;
  }

  .input {
    border-width: 2px;
  }

  .input-icon {
    transform: translateY(1.5rem);
    font-size: 1.5rem;
  }

  .password-icon {
    right: 3rem;
  }

  .password-eye-line {
    transform: translateX(-1.5rem);
  }

  .password-requirements-container.active {
    height: 48px;
  }

  .tos {
    font-size: 2.42vw;
  }
  .tos .checkmark::after {
    width: 0.5rem;
    height: 1rem;
    transform: translate(-50%, calc(-50% - 2px)) rotate(45deg);
  }
}
/* show the mobile-landscape blocking div */
@media (max-width: 967px) and (min-aspect-ratio: 13/9) {
  .block-mobile-landscape {
    display: flex;
    align-items: center;
    justify-content: center;
  }
}
/* the reason min-aspect-ratio is used instead of oreintation above, is because orientation gets broken on phone keyboard popup */
@media (min-width: 968px) and (max-width: 1439px) {
  /* smaller slider on bigger screens */
  .slider {
    width: 50%;
  }
  .slider.slide {
    margin-left: 50%;
  }
}
@media (min-width: 1440px) {
  .slider {
    width: 30%;
  }
  .slider.slide {
    margin-left: 70%;
  }
}
/* all what's below is for extra themes and will not be documented */
.open-themes-button {
  position: absolute;
  bottom: 1.5rem;
  right: 1rem;
  width: 3rem;
  height: 3rem;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: 0.25s;
  cursor: pointer;
  background: var(--primary-color);
  color: var(--title-color);
  border: 5px solid var(--secondary-color);
  border-radius: 50%;
}
.open-themes-button:hover {
  background: var(--secondary-color);
}

.themes {
  position: absolute;
  bottom: 0;
  right: 1rem;
  transform: translateY(105%);
  width: 340px;
  height: max-content;
  background: var(--body-color);
  border: 3.5px solid var(--secondary-color);
  border-radius: 20px;
  padding: 1rem;
  font-size: var(--small-font-size);
  color: var(--title-color);
  transition: 0.8s ease;
  overflow: hidden;
}
.themes.active {
  transform: translateY(-1.5rem);
}

.close-themes-button {
  float: right;
  text-align: end;
  font-size: 2rem;
  cursor: pointer;
  transition: 0.25s;
}
.close-themes-button:hover {
  color: var(--primary-color);
}

.theme-styles-container {
  display: grid;
  grid-gap: 0.5rem 1rem;
  grid-template-columns: 50% 50%;
  margin: 1.5rem 0 1rem 0;
}

.extra-theme-options {
  margin-top: 1rem;
}
.extra-theme-options .add-own-theme, .extra-theme-options .remove-themes {
  font-weight: 600;
  cursor: pointer;
}
.extra-theme-options .add-own-theme {
  color: var(--secondary-color);
}
.extra-theme-options .remove-themes {
  float: right;
  text-transform: uppercase;
  font-weight: 600;
  color: var(--invalid-color);
}

.own-theme, .remove-themes-confirm-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: inherit;
  transition: 0.8s ease;
}

.back-to-themes {
  cursor: pointer;
}
.back-to-themes:hover {
  color: var(--primary-color);
}

.own-theme {
  padding: 1rem;
  transform: translateX(-100%);
}
.own-theme.active {
  transform: translateX(0);
}
.own-theme .clear-custom-theme {
  float: right;
  cursor: pointer;
}
.own-theme .clear-custom-theme:hover {
  color: var(--primary-color);
}
.own-theme form {
  padding: 0 0.35rem;
  margin-top: 1rem;
}
.own-theme form div label {
  color: var(--title-color);
  padding: 2px;
}
.own-theme form div input {
  border: 0;
  background: transparent;
  color: var(--text-color);
  outline: none;
}
.own-theme form div input[type=color] {
  width: var(--medium-font-size);
  height: var(--medium-font-size);
  padding-right: 5px;
}
.own-theme form div.colors {
  display: grid;
  grid-gap: 0.725rem;
  grid-template-columns: 50% 50%;
  margin: 0.725rem 0;
}
.own-theme form > div:first-child {
  border-bottom: 1px solid var(--primary-color);
}

.remove-themes-confirm-container {
  padding: 1rem 1.5rem;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  align-items: center;
  font-size: var(--medium-font-size);
  transform: translateX(100%);
}
.remove-themes-confirm-container > div {
  width: 100%;
  display: flex;
  justify-content: space-evenly;
  align-items: center;
}
.remove-themes-confirm-container.active {
  transform: translateX(0);
}

.remove-themes-confirm {
  color: var(--invalid-color);
  font-weight: 900;
  cursor: pointer;
}

/* if your device is this small you are making my life harder and don't deserve to customize your theme */
@media (max-width: 355px) {
  .open-themes-button, .themes {
    display: none;
  }
}
body.winter {
  --background-image: url(https://www.teahub.io/photos/full/124-1245972_wallpaper-house-winter-snow-forest-comfort-winter-forest.jpg);
  --primary-color: #3b3b40;
  --secondary-color: #a68851;
  --body-color: #747c8c;
  --body-color-gradient: #747c8cec;
  --title-color: #ccd0d9;
  --text-color: #aab3bf;
  --valid-color: #6eba9e;
  --invalid-color: #e25822;
}
body.fall {
  --background-image: url(https://wallpaperaccess.com/full/1164947.jpg);
  --primary-color: #0D0D0D;
  --secondary-color: #d46707;
  --body-color: #773b03;
  --body-color-gradient: #773b03e0;
  --title-color: #e9f6f8;
  --text-color: #daf0f5;
  --valid-color: #03755e;
  --invalid-color: #d63114;
}
body.sunset {
  --background-image: url(https://i.imgur.com/o6eWHwI_d.webp?maxwidth=1520&fidelity=grand);
  --primary-color: #262523;
  --secondary-color: #b98e66;
  --body-color: #9b4e22;
  --body-color-gradient: #9b4e22ec;
  --title-color: #c9cdd1;
  --text-color: #acb8c5;
  --valid-color: #A5FAD6;
  --invalid-color: #F54040;
  --transparent: rgba(0, 0, 0, 0);
}
body.mountain {
  --background-image: url(https://i.imgur.com/NWC1ak5_d.webp?maxwidth=1520&fidelity=grand);
  --primary-color: #F2EEEB;
  --secondary-color: #a57c6e;
  --body-color: #08080D;
  --body-color-gradient: #08080DEC;
  --title-color: #a5a4a8;
  --text-color: #848488;
  --valid-color: #00ff00;
  --invalid-color: #ff0000;
}
body.city {
  --background-image: url(https://free4kwallpapers.com/uploads/originals/2019/05/20/streetlight-wallpaper.jpg);
  --primary-color: #41497a;
  --secondary-color: #04326d;
  --body-color: #0C0D07;
  --body-color-gradient: #0C0D07EC;
  --title-color: #e6e3c1;
  --text-color: #cbcbcb;
  --valid-color: #07F292;
  --invalid-color: #F20530;
  --transparent: rgba(0, 0, 0, 0);
}
body.ocean {
  --background-image: url(https://i.imgur.com/Ajtf6P2.jpeg);
  --primary-color: #063135;
  --secondary-color: #7ddde6;
  --body-color: #038c8c;
  --body-color-gradient: #038c8cec;
  --title-color: #E4EBF2;
  --text-color: #BACBD9;
  --valid-color: #05cf93;
  --invalid-color: #692c0b;
}
body.lanterns {
  --background-image: url(https://storge.pic2.me/upload/786/5fd0b499503507.44994773.jpg);
  --primary-color: #F29BAB;
  --secondary-color: #8188e9;
  --body-color: #010440;
  --body-color-gradient: #010440ec;
  --title-color: #f3ebf0;
  --text-color: #f1e1eb;
  --valid-color: #91f6b2;
  --invalid-color: #db2b66;
  --transparent: rgba(0, 0, 0, 0);
}